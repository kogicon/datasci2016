All of the data files are in final_data

Music-centric hypothesis:

bigalbumtotracks.txt - didctionary that maps album to tracks with their track numbers and popularities
bigartisttoalbum.txt - dictionary that makes artists to albums
bigartisttopopularity.txt - dictionary that maps artists to their popularities

User-centric hypothesis:
newuserwgenres.txt - dictionary that maps users to their hipster scores and genre counts
userpopgenre.txt - dictionary that mapsusers to their hipster score, # genres, # ungenred artists, # artists listened to 


How we got, cleaned, and processed data for our music-centric hypothesis:
I used code from the gettingmusicdata.js file to get data for the music-centric hypothesis. First, I got random artists, then I got one album from those artists, then I got the tracks from all those albums, then I got the track popularities and track numbers for those tracks. It won't run because I had many issues being rate-limited and using promises, but I wanted to provide the code I used to prove that we scraped data using Spotify's API. The txt files are provided in the final_data folder. Once we got them into text files, we had to use regexes to convert the txt files into JSON.